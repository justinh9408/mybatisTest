<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Dao.EmployeeMapperDynamicSql">

    <cache></cache>

    <!--    List<Employee> findEmpWithConditionIf(Employee employee);-->
    <select id="findEmpWithConditionIf" resultType="Entity.Employee">
        select * from employee
        <where>
            <if test="id != null">
                id = #{id}
            </if>
            <if test="lastName != null and lastName != ''">
                and last_name like #{lastName}
            </if>
            <if test="email != null and email.trim() != ''">
                and email = #{email}
            </if>
            <if test="gender == 0 or gender == 1">
                and gender = #{gender}
            </if>
        </where>
    </select>


    <!--    List<Employee> findEmpWithIfandTrim(Employee employee);-->
    <select id="findEmpWithIfandTrim" resultType="Entity.Employee">
        select * from employee
        <trim prefix="where" suffixOverrides="and">
            <if test="id != null">
                id = #{id} and
            </if>
            <if test="lastName != null and lastName != ''">
                last_name like #{lastName} and
            </if>
            <if test="email != null and email.trim() != ''">
                email = #{email} and
            </if>
            <if test="gender == 0 or gender == 1">
                gender = #{gender}
            </if>
        </trim>
    </select>

    <!--    List<Employee> findEmpWithChoose(Employee employee);-->
    <select id="findEmpWithChoose" resultType="Entity.Employee">
        <bind name="_lastName" value="'%'+lastName+'%'"/>
        select * from employee
        <where>
            <choose>
                <when test="id != null">
                    id = #{id}
                </when>
                <when test="lastName != null">
                    last_name like #{lastName}
                </when>
            </choose>
        </where>
    </select>

    <!--    void updateEmpSet(Employee);-->
    <update id="updateEmpSet">
        update employee
        <set>
            <if test="lastName != null">
                last_name = #{lastName},
            </if>
            <if test="email != null">
                email = #{email},
            </if>
            <if test="gender != null">
                gender = #{gender}
            </if>
        </set>
        where id = #{id}
    </update>

    <!--    List<Employee> findEmpsWithForeach(List<Integer> ids);-->
    <select id="findEmpsWithForeach" resultType="Entity.Employee">
        select * from employee where id in
        <foreach collection="list" separator="," item="itemId"
                 open="(" close=")">
            #{itemId}
        </foreach>
    </select>


    <!--    void addEmps(@Param("emps") List<Employee> emps);-->
    <insert id="addEmps">
        insert into employee(last_name, email, gender, dpt_id)
        values
        <foreach collection="emps" item="emp" separator=",">
            (#{emp.lastName},#{emp.email},#{emp.gender},#{emp.department.id})
        </foreach>
    </insert>

</mapper>